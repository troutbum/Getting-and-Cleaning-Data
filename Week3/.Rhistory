names(complete.data) #check names in data frame
ozone.above31.data <- subset(complete.data, Ozone > 31) #subset of data
temp.above90.data <- subset(ozone.above31.data, Temp > 90)  #subset of data
o31andt90.data <- subset(complete.data, Ozone > 31 & Temp > 90) #test both conditions at once
xdata <- data.matrix(o31andt90.data)  # convert to matrix?  need to do this to find mean?
solar<- xdata[,"Solar.R"]
mean(solar)
# Question 19:  Mean Temp when Month = 6
y.df <- subset(data, Month == 6)  #use all the data not the cleaned set
y <- data.matrix(y.df) #convert to matrix
temp <- y[,"Temp"]
mean(temp)
# Question 20: What was the maximum ozone value in the month of May (i.e. Month = 5)?
z.df <- subset(complete.data, Month ==5) #must used "cleaned" data otherwise max() returns NA
z <- data.matrix(z.df) #convert to matrix
ozone <- z[,"Ozone"]
max(ozone)
t.df <- subset(data, Month == 6)
t1 <- t.df[,"Temp"]
mean(t1)
mean(t.df)
mean(t.df[,"Temp"])
mean(subset(data, Month == 6))
mean(subset(data, Month == 6)[,"Temp"])
mean(subset(data, Ozone > 31 & Temp > 90)[,"Solar.R"])
max(subset(data, Month == 5)[,"Ozone"])
max(subset(complete.data, Month == 5)[,"Ozone"])
# R Programming - April 2014
# Week 1 Quiz
# Question 18:  Extract the subset of rows of the data frame
# where Ozone values are above 31 and Temp values are above 90.
# What is the mean of Solar.R in this subset?
hw1_data <- read.csv("~/Downloads/hw1_data.csv")
getwd()
data<-hw1_data
dim(data)  #dimensions of input data
good <- complete.cases(data) #logical vector to weed out NAs
complete.data<-data[good,][,]  #complete data only
names(complete.data) #check names in data frame
ozone.above31.data <- subset(complete.data, Ozone > 31) #subset of data
temp.above90.data <- subset(ozone.above31.data, Temp > 90)  #subset of data
o31andt90.data <- subset(complete.data, Ozone > 31 & Temp > 90) #test both conditions at once
xdata <- data.matrix(o31andt90.data)  # convert to matrix?  need to do this to find mean?
solar<- xdata[,"Solar.R"]
mean(solar)
# Question 19:  Mean Temp when Month = 6
y.df <- subset(data, Month == 6)  #use all the data not the cleaned set
y <- data.matrix(y.df) #convert to matrix
temp <- y[,"Temp"]
mean(temp)
# Question 20: What was the maximum ozone value in the month of May (i.e. Month = 5)?
z.df <- subset(complete.data, Month ==5) #must used "cleaned" data otherwise max() returns NA
z <- data.matrix(z.df) #convert to matrix
ozone <- z[,"Ozone"]
max(ozone)
# Compressed code for Questions 18-20
mean(subset(data, Month == 6)[,"Temp"])
mean(subset(data, Ozone > 31 & Temp > 90)[,"Solar.R"])
max(subset(complete.data, Month == 5)[,"Ozone"])  # need NA removed dataset for max()
# R Programming - April 2014
# Week 1 Quiz
# Question 18:  Extract the subset of rows of the data frame
# where Ozone values are above 31 and Temp values are above 90.
# What is the mean of Solar.R in this subset?
hw1_data <- read.csv("~/Downloads/hw1_data.csv")
getwd()
data<-hw1_data
dim(data)  #dimensions of input data
good <- complete.cases(data) #logical vector to weed out NAs
complete.data<-data[good,][,]  #complete data only
names(complete.data) #check names in data frame
ozone.above31.data <- subset(complete.data, Ozone > 31) #subset of data
temp.above90.data <- subset(ozone.above31.data, Temp > 90)  #subset of data
o31andt90.data <- subset(complete.data, Ozone > 31 & Temp > 90) #test both conditions at once
xdata <- data.matrix(o31andt90.data)  # convert to matrix?  need to do this to find mean?
solar<- xdata[,"Solar.R"]
mean(solar)
# Question 19:  Mean Temp when Month = 6
y.df <- subset(data, Month == 6)  #use all the data not the cleaned set
y <- data.matrix(y.df) #convert to matrix
temp <- y[,"Temp"]
mean(temp)
# Question 20: What was the maximum ozone value in the month of May (i.e. Month = 5)?
z.df <- subset(complete.data, Month ==5) #must used "cleaned" data otherwise max() returns NA
z <- data.matrix(z.df) #convert to matrix
ozone <- z[,"Ozone"]
max(ozone)
# Compressed code for Questions 18-20
# (matches previous results)
mean(subset(data, Month == 6)[,"Temp"])
mean(subset(data, Ozone > 31 & Temp > 90)[,"Solar.R"])
max(subset(complete.data, Month == 5)[,"Ozone"])  # need NA removed dataset for max()
install.packages("swirl")  # Installs swirl
library(swirl)  # Loads swirl
swirl()  # Runs swirl
install.packages("swirl")  # Installs swirl
library(swirl)  # Loads swirl
swirl()  # Runs swirl
library(datasets)
data(iris)
?iris
myi <- iris
View(iris)
MPG <- read.csv("~/Downloads/MPG.csv")
View(MPG)
ColMean?
?ColMean
?ColMeans
ColMeans?
ColSums(MPG,Cost)
mean(MPG,"MPG")
x <-MPG
ColSums(X)
ColSums(x)
colMeans(x)
colMeans(x,7)
tail(x)
nrow(x)
mean(x,[,"MPG"])
mean(x[,"MPG"])
mileage <- MPG[,"MPG"]
mean(mileage)
View(x)
?ColMeans
colMeans(x,na.rm = TRUE)
mean?
?mean
mean(mileage, na.rm=TRUE)
cost<-x[,"Cost"]
sum(cost)
PriusMPG <- read.csv("~/Downloads/PriusMPG.csv")
View(PriusMPG)
priusMileage<-PriusMPG[,"MPG"]
mean(priusMileage, na.rm=TRUE)
?split
pCost <- PriusMPG[,"Cost"]
sum(pCost)
sum(pCost, na.rm=TRUE)
?days
92464/6
(92464/6)/12
View(x)
?dates
?date
5757/6
mean(x[,7])
mean(x[,7],na.rm=TRUE)
sum(x[,4])
class(x[,1])
y<-strptime(x[1,1])
y<-as.date(x[1,1])
y<-as.Date(x[1,1])
?strp
?str
summary(x)
str(x)
x[,1]>="12/31/2013"
as.Date(x[,1])>="12/31/2013"
x[1,1]
str(date)
str(as.Date)
summary(PriusMPG)
summary(x)
factor
?factor
colMeans(x[,7])
str(colMeans)
?colMeans
class(x[,7])
x[,7]
colMeans(x[,7],na.rm=TRUE)
x
set.seed(1)
rpois(5, 2)
set.seed(10)
x <- rbinom(10, 10, 0.5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
install.packages("~/Downloads/xlsx_0.5.5.tgz", repos = NULL)
library(xlsx)
R.Version()
R.Version()
install.packages("xlsx")
library(xlsx)
rowIndex <- 18:23
colIndex <- 7:15
dat <- read.xlsx("./data/NGAP.xlsx,sheetIndex=1,colIndex=colIndex,rowIndex=rowIndex")
setwd("~/CourseraHW/Getting-and-Cleaning-Data/Week3")
setwd("~/CourseraHW/Getting-and-Cleaning-Data/Week3")
# create a data subdirectory if it does not exist
if (!file.exists("data")) {
dir.create("data")
}
filePath <- "./data/"
fileName <- "getdata-data-ss06hid.csv"
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
paste0(filePath, fileName)
# download file if it isn't already there
if (!file.exists(paste0(filePath, fileName))) {
download.file(fileUrl, destfile = paste0(filePath, fileName), method ="curl")
dateDownloaded <- date()
}
# download file if it isn't already there
if (!file.exists(paste0(filePath, fileName))) {
download.file(fileUrl, destfile = paste0(filePath, fileName), method ="curl")
dateDownloaded <- date()
}
# download file if it isn't already there
if (!file.exists(paste0(filePath, fileName))) {
download.file(fileUrl, destfile = paste0(filePath, fileName), method ="curl")
dateDownloaded <- date()
}
# download file if it isn't already there
if (!file.exists(paste0(filePath, fileName))) {
download.file(fileUrl, destfile = paste0(filePath, fileName), method ="curl")
dateDownloaded <- date()
}
# Getting and Cleaning Data
# May 2014
# Quiz 3
# Question 1
# The American Community Survey distributes downloadable data about United
# States communities. Download the 2006 microdata survey about housing for the
# state of Idaho using download.file() from here:
#
#         https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv
#
# and load the data into R. The code book, describing the variable names is
# here:
#
#         https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FPUMSDataDict06.pdf
#
# Create a logical vector that identifies the households on greater than 10
# acres who sold more than $10,000 worth of agriculture products. Assign that
# logical vector to the variable agricultureLogical. Apply the which() function
# like this to identify the rows of the data frame where the logical vector is
# TRUE. which(agricultureLogical)
#
# What are the first 3 values that result?
# 59, 460, 474
# 153 ,236, 388
# 125, 238,262
# 25, 36, 45
# create a data subdirectory if it does not exist
if (!file.exists("data")) {
dir.create("data")
}
filePath <- "./data/"
fileName <- "getdata-data-ss06hid.csv"
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
# download file if it isn't already there
if (!file.exists(paste0(filePath, fileName))) {
download.file(fileUrl, destfile = paste0(filePath, fileName), method ="curl")
dateDownloaded <- date()
}
fileName <- "getdata-data-PUMSDataDict06.pdf"
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FPUMSDataDict06.pdf"
# download file if it isn't already there
if (!file.exists(paste0(filePath, fileName))) {
download.file(fileUrl, destfile = paste0(filePath, fileName), method ="curl")
dateDownloaded <- date()
}
x <- read.csv(paste0(filePath, fileName))
# create logical vectors
acres <- x$ACR == 3                     # from codebook > 10 acres
summary(acres)
sales <- x$AGS == 6                     # from codebook > $10K sales
summary(sales)
agricultureLogical = acres & sales
summary(agricultureLogical)
which(agricultureLogical)
View(x)
# Getting and Cleaning Data
# May 2014
# Quiz 3
# Question 1
# The American Community Survey distributes downloadable data about United
# States communities. Download the 2006 microdata survey about housing for the
# state of Idaho using download.file() from here:
#
#         https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv
#
# and load the data into R. The code book, describing the variable names is
# here:
#
#         https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FPUMSDataDict06.pdf
#
# Create a logical vector that identifies the households on greater than 10
# acres who sold more than $10,000 worth of agriculture products. Assign that
# logical vector to the variable agricultureLogical. Apply the which() function
# like this to identify the rows of the data frame where the logical vector is
# TRUE. which(agricultureLogical)
#
# What are the first 3 values that result?
# 59, 460, 474
# 153 ,236, 388
# 125, 238,262
# 25, 36, 45
# create a data subdirectory if it does not exist
if (!file.exists("data")) {
dir.create("data")
}
filePath <- "./data/"
# download codebook
fileName <- "getdata-data-PUMSDataDict06.pdf"
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FPUMSDataDict06.pdf"
if (!file.exists(paste0(filePath, fileName))) {
download.file(fileUrl, destfile = paste0(filePath, fileName), method ="curl")
dateDownloaded <- date()
}
# download dataset
fileName <- "getdata-data-ss06hid.csv"
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
if (!file.exists(paste0(filePath, fileName))) {
download.file(fileUrl, destfile = paste0(filePath, fileName), method ="curl")
dateDownloaded <- date()
}
# read in dataset
x <- read.csv(paste0(filePath, fileName))
# create logical vectors
acres <- x$ACR == 3                     # from codebook > 10 acres
summary(acres)
sales <- x$AGS == 6                     # from codebook > $10K sales
summary(sales)
agricultureLogical = acres & sales
summary(agricultureLogical)
which(agricultureLogical)
# Getting and Cleaning Data
# May 2014
# Quiz 3
# Question 1
# The American Community Survey distributes downloadable data about United
# States communities. Download the 2006 microdata survey about housing for the
# state of Idaho using download.file() from here:
#
#         https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv
#
# and load the data into R. The code book, describing the variable names is
# here:
#
#         https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FPUMSDataDict06.pdf
#
# Create a logical vector that identifies the households on greater than 10
# acres who sold more than $10,000 worth of agriculture products. Assign that
# logical vector to the variable agricultureLogical. Apply the which() function
# like this to identify the rows of the data frame where the logical vector is
# TRUE. which(agricultureLogical)
#
# What are the first 3 values that result?
# 59, 460, 474
# 153 ,236, 388
# 125, 238,262
# 25, 36, 45
# create a data subdirectory if it does not exist
if (!file.exists("data")) {
dir.create("data")
}
filePath <- "./data/"
# download codebook
fileName <- "getdata-data-PUMSDataDict06.pdf"
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FPUMSDataDict06.pdf"
if (!file.exists(paste0(filePath, fileName))) {
download.file(fileUrl, destfile = paste0(filePath, fileName), method ="curl")
dateDownloaded <- date()
}
# download dataset
fileName <- "getdata-data-ss06hid.csv"
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
if (!file.exists(paste0(filePath, fileName))) {
download.file(fileUrl, destfile = paste0(filePath, fileName), method ="curl")
dateDownloaded <- date()
}
# read in dataset
x <- read.csv(paste0(filePath, fileName))
# create logical vectors
acres <- x$ACR == 3                     # from codebook > 10 acres
summary(acres)
sales <- x$AGS == 6                     # from codebook > $10K sales
summary(sales)
agricultureLogical = acres & sales
summary(agricultureLogical)
which(agricultureLogical)
# create a data subdirectory if it does not exist
if (!file.exists("data")) {
dir.create("data")
}
filePath <- "./data/"
# download file
fileName <- "getdata-jeff"
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg "
if (!file.exists(paste0(filePath, fileName))) {
download.file(fileUrl, destfile = paste0(filePath, fileName), method ="curl")
dateDownloaded <- date()
}
install.packages("jpeg")
library(jpeg)
# Getting and Cleaning Data
# May 2014
# Quiz 3
# Question 2
# Using the jpeg package read in the following picture of your instructor into R
#
# https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg
#
# Use the parameter native=TRUE. What are the 30th and 80th quantiles of the resulting data?
# 10904118 -594524
# -15259150 -10575416
# -15259150 -594524
# -14191406 -10904118
# create a data subdirectory if it does not exist
if (!file.exists("data")) {
dir.create("data")
}
filePath <- "./data/"
# download file
fileName <- "getdata-jeff"
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg "
xFile <- paste0(filePath, fileName)
if (!file.exists(xFile)) {
download.file(fileUrl, destfile = xFile), method ="curl")
dateDownloaded <- date()
}
library(jpeg)
readJPEG(xFile, native = TRUE)
# Getting and Cleaning Data
# May 2014
# Quiz 3
# Question 2
# Using the jpeg package read in the following picture of your instructor into R
#
# https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg
#
# Use the parameter native=TRUE. What are the 30th and 80th quantiles of the resulting data?
# 10904118 -594524
# -15259150 -10575416
# -15259150 -594524
# -14191406 -10904118
# create a data subdirectory if it does not exist
if (!file.exists("data")) {
dir.create("data")
}
filePath <- "./data/"
# download file
fileName <- "getdata-jeff"
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg "
xFile <- paste0(filePath, fileName)
if (!file.exists(xFile)) {
download.file(fileUrl, destfile = xFile), method ="curl")
dateDownloaded <- date()
}
library(jpeg)
x <- readJPEG(xFile, native = TRUE)
if (!file.exists(xFile)) {
download.file(fileUrl, destfile = xFile), method ="curl")
dateDownloaded <- date()
}
# Getting and Cleaning Data
# May 2014
# Quiz 3
# Question 2
# Using the jpeg package read in the following picture of your instructor into R
#
# https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg
#
# Use the parameter native=TRUE. What are the 30th and 80th quantiles of the resulting data?
# 10904118 -594524
# -15259150 -10575416
# -15259150 -594524
# -14191406 -10904118
# create a data subdirectory if it does not exist
if (!file.exists("data")) {
dir.create("data")
}
filePath <- "./data/"
# download file
fileName <- "getdata-jeff"
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg "
xFile <- paste0(filePath, fileName)
if (!file.exists(xFile)) {
download.file(fileUrl, destfile = xFile, method ="curl")
dateDownloaded <- date()
}
library(jpeg)
x <- readJPEG(xFile, native = TRUE)
# Getting and Cleaning Data
# May 2014
# Quiz 3
# Question 2
# Using the jpeg package read in the following picture of your instructor into R
#
# https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg
#
# Use the parameter native=TRUE. What are the 30th and 80th quantiles of the resulting data?
# 10904118 -594524
# -15259150 -10575416
# -15259150 -594524
# -14191406 -10904118
# create a data subdirectory if it does not exist
if (!file.exists("data")) {
dir.create("data")
}
filePath <- "./data/"
# download file
fileName <- "getdata-jeff"
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg "
xFile <- paste0(filePath, fileName)
if (!file.exists(xFile)) {
download.file(fileUrl, destfile = xFile, method ="curl")
dateDownloaded <- date()
}
library(jpeg)
x <- readJPEG(xFile, native = TRUE)
